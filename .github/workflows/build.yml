name: Build and Release App

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      # ---- PyTorch per-OS ----
      - name: Install PyTorch (macOS)
        if: runner.os == 'macOS'
        run: |
          python -m pip install --upgrade pip
          pip install --no-deps torch==2.3.1 torchvision==0.18.1 torchaudio==2.3.1

      - name: Install PyTorch (Linux/Windows)
        if: runner.os != 'macOS'
        run: |
          python -m pip install --upgrade pip
          pip install --no-deps torch==2.3.1+cpu torchvision==0.18.1+cpu torchaudio==2.3.1+cpu \
            --extra-index-url https://download.pytorch.org/whl/cpu

      # ---- Rest of dependencies ----
      - name: Install remaining dependencies
        run: |
          pip install -r requirements.txt
          pip install pyinstaller

      # ---- Build binaries ----
      - name: Build executable
        shell: bash
        run: |
          pyinstaller --onefile app.py \
            --add-data "Templates${{ runner.os == 'Windows' && ';' || ':' }}Templates" \
            --add-data "ui${{ runner.os == 'Windows' && ';' || ':' }}ui" \
            --add-data "services${{ runner.os == 'Windows' && ';' || ':' }}services" \
            --add-data "pipeline${{ runner.os == 'Windows' && ';' || ':' }}pipeline" \
            --add-data "utils${{ runner.os == 'Windows' && ';' || ':' }}utils"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-${{ matrix.os }}
          path: dist/*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
